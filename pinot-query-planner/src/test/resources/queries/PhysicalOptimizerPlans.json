{
  "physical_opt_join_planning_tests": {
    "queries": [
      {
        "description": "Inner join with order by",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT a.col1, a.ts, b.col3 FROM a JOIN b ON a.col1 = b.col2 ORDER BY a.col1",
        "output": [
          "Execution Plan",
          "\nPhysicalSort(sort0=[$0], dir0=[ASC])",
          "\n  PhysicalExchange(exchangeStrategy=[SINGLETON_EXCHANGE], distKeys=[[]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalProject(col1=[$0], ts=[$1], col3=[$3])",
          "\n      PhysicalJoin(condition=[=($0, $2)], joinType=[inner])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col1=[$0], ts=[$6])",
          "\n            PhysicalTableScan(table=[[default, a]])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col2=[$1], col3=[$2])",
          "\n            PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "Inner join with order by and select column with alias",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT a.col1 AS value1, a.ts AS ts1, b.col3 FROM a JOIN b ON a.col1 = b.col2 ORDER BY a.col1",
        "output": [
          "Execution Plan",
          "\nPhysicalSort(sort0=[$0], dir0=[ASC])",
          "\n  PhysicalExchange(exchangeStrategy=[SINGLETON_EXCHANGE], distKeys=[[]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalProject(value1=[$0], ts1=[$1], col3=[$3])",
          "\n      PhysicalJoin(condition=[=($0, $2)], joinType=[inner])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col1=[$0], ts=[$6])",
          "\n            PhysicalTableScan(table=[[default, a]])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col2=[$1], col3=[$2])",
          "\n            PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "SELECT * inner join",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT * FROM a JOIN b ON a.col1 = b.col2",
        "output": [
          "Execution Plan",
          "\nPhysicalJoin(condition=[=($0, $9)], joinType=[inner])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, a]])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[1]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "SELECT * inner join with filter on one table",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT * FROM a JOIN b ON a.col1 = b.col2 WHERE a.col3 >= 0",
        "output": [
          "Execution Plan",
          "\nPhysicalJoin(condition=[=($0, $9)], joinType=[inner])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalFilter(condition=[>=($2, 0)])",
          "\n      PhysicalTableScan(table=[[default, a]])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[1]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "SELECT * inner join with filter",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT * FROM a JOIN b ON a.col1 = b.col2 WHERE a.col3 >= 0 AND a.col3 > b.col3",
        "output": [
          "Execution Plan",
          "\nPhysicalJoin(condition=[AND(=($0, $9), >($2, $10))], joinType=[inner])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalFilter(condition=[>=($2, 0)])",
          "\n      PhysicalTableScan(table=[[default, a]])",
          "\n  PhysicalExchange(exchangeStrategy=[BROADCAST_EXCHANGE], distKeys=[[]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "SELECT * inner join on 2 columns equality",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT * FROM a JOIN b on a.col1 = b.col1 AND a.col2 = b.col2",
        "output": [
          "Execution Plan",
          "\nPhysicalJoin(condition=[AND(=($0, $8), =($1, $9))], joinType=[inner])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0, 1]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, a]])",
          "\n  PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0, 1]], execStrategy=[STREAMING], collation=[[]])",
          "\n    PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      }
    ]
  },
  "physical_opt_semi_join_planning_tests": {
    "queries": [
      {
        "description": "Single semi-join",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT col1, col2 FROM a WHERE col3 IN (SELECT col3 FROM b)",
        "output": [
          "Execution Plan",
          "\nPhysicalProject(col1=[$0], col2=[$1])",
          "\n  PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n        PhysicalTableScan(table=[[default, a]])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col3=[$2])",
          "\n        PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "Multiple semi-join",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT col1, col2 FROM a WHERE col3 IN (SELECT col3 FROM b WHERE col2='foo') AND col3 IN (SELECT col3 FROM b WHERE col2='bar') AND col3 IN (SELECT col3 FROM b WHERE col2='lorem')",
        "output": [
          "Execution Plan",
          "\nPhysicalProject(col1=[$0], col2=[$1])",
          "\n  PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n    PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n      PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n            PhysicalTableScan(table=[[default, a]])",
          "\n        PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n          PhysicalProject(col3=[$2])",
          "\n            PhysicalFilter(condition=[=($1, _UTF-8'foo')])",
          "\n              PhysicalTableScan(table=[[default, b]])",
          "\n      PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n        PhysicalProject(col3=[$2])",
          "\n          PhysicalFilter(condition=[=($1, _UTF-8'bar')])",
          "\n            PhysicalTableScan(table=[[default, b]])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col3=[$2])",
          "\n        PhysicalFilter(condition=[=($1, _UTF-8'lorem')])",
          "\n          PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "semi-join, followed by anti semi-join with single-server table, followed by another semi-join",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT col1, col2 FROM a WHERE col3 IN (SELECT col3 FROM b WHERE col2='foo') AND col3 NOT IN (SELECT col3 FROM b WHERE col2='bar') AND col3 IN (SELECT col3 FROM b WHERE col2='lorem')",
        "output": [
          "Execution Plan",
          "\nPhysicalProject(col1=[$0], col2=[$1])",
          "\n  PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n        PhysicalFilter(condition=[IS NOT TRUE($5)])",
          "\n          PhysicalJoin(condition=[=($3, $4)], joinType=[left])",
          "\n            PhysicalProject(col1=[$0], col2=[$1], col3=[$2], col31=[$2])",
          "\n              PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n                PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n                  PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n                    PhysicalTableScan(table=[[default, a]])",
          "\n                PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n                  PhysicalProject(col3=[$2])",
          "\n                    PhysicalFilter(condition=[=($1, _UTF-8'foo')])",
          "\n                      PhysicalTableScan(table=[[default, b]])",
          "\n            PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n              PhysicalAggregate(group=[{0}], agg#0=[MIN($1)])",
          "\n                PhysicalProject(col3=[$2], $f1=[true])",
          "\n                  PhysicalFilter(condition=[=($1, _UTF-8'bar')])",
          "\n                    PhysicalTableScan(table=[[default, b]])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col3=[$2])",
          "\n        PhysicalFilter(condition=[=($1, _UTF-8'lorem')])",
          "\n          PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      },
      {
        "description": "semi-join, followed by anti semi-join on same fact table, followed by another semi-join",
        "sql": "SET usePhysicalOptimizer=true; EXPLAIN PLAN FOR SELECT col1, col2 FROM a WHERE col3 IN (SELECT col3 FROM b WHERE col2='foo') AND col3 NOT IN (SELECT col3 FROM a WHERE col2='bar') AND col3 IN (SELECT col3 FROM b WHERE col2='lorem')",
        "output": [
          "Execution Plan",
          "\nPhysicalProject(col1=[$0], col2=[$1])",
          "\n  PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n        PhysicalFilter(condition=[IS NOT TRUE($5)])",
          "\n          PhysicalJoin(condition=[=($3, $4)], joinType=[left])",
          "\n            PhysicalProject(col1=[$0], col2=[$1], col3=[$2], col31=[$2])",
          "\n              PhysicalJoin(condition=[=($2, $3)], joinType=[semi])",
          "\n                PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[2]], execStrategy=[STREAMING], collation=[[]])",
          "\n                  PhysicalProject(col1=[$0], col2=[$1], col3=[$2])",
          "\n                    PhysicalTableScan(table=[[default, a]])",
          "\n                PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n                  PhysicalProject(col3=[$2])",
          "\n                    PhysicalFilter(condition=[=($1, _UTF-8'foo')])",
          "\n                      PhysicalTableScan(table=[[default, b]])",
          "\n            PhysicalAggregate(group=[{0}], agg#0=[MIN($1)])",
          "\n              PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n                PhysicalAggregate(group=[{0}], agg#0=[MIN($1)])",
          "\n                  PhysicalProject(col3=[$2], $f1=[true])",
          "\n                    PhysicalFilter(condition=[=($1, _UTF-8'bar')])",
          "\n                      PhysicalTableScan(table=[[default, a]])",
          "\n    PhysicalExchange(exchangeStrategy=[PARTITIONING_EXCHANGE], distKeys=[[0]], execStrategy=[STREAMING], collation=[[]])",
          "\n      PhysicalProject(col3=[$2])",
          "\n        PhysicalFilter(condition=[=($1, _UTF-8'lorem')])",
          "\n          PhysicalTableScan(table=[[default, b]])",
          "\n"
        ]
      }
    ]
  }
}
